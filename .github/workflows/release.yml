name: Create Release

on:
  push:
    tags:
      - 'release-*'

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [18.x]

    steps:
    - uses: actions/checkout@v3

    - name: Set up variables
      id: get_vars
      run: |
        TAG=${GITHUB_REF/refs\/tags\//}
        echo ::set-output name=TAG_NAME::$TAG
        echo ::set-output name=ZIP_NAME::six-feet-under-$TAG.zip
        echo ::set-output name=RELEASE_DOWNLOAD_URL::https://github.com/${{github.repository}}/releases/download/$TAG/six-feet-under-$TAG.zip
        echo ::set-output name=RELEASE_INSTALL_URL::https://github.com/${{github.repository}}/releases/download/$TAG/module.json
        JSON=$(cat ./module/module.json)
        echo ::set-output name=SYSTEM_JSON::${JSON//'%'/'%25'}

    # Run some tests to make sure our `module.json` is correct
    # Exit before setting up node if not
    - name: Verify Naming
      env:
        TAG_NAME: ${{ steps.get_vars.outputs.TAG_NAME }}
        RELEASE_DOWNLOAD: ${{steps.get_vars.outputs.RELEASE_DOWNLOAD_URL}}
        # Extract version and download url from module.json
        # https://docs.github.com/en/actions/learn-github-actions/expressions#fromjson
        PACKAGE_VERSION: ${{fromJSON(steps.get_vars.outputs.SYSTEM_JSON).version}}
        PACKAGE_DOWNLOAD: ${{fromJSON(steps.get_vars.outputs.SYSTEM_JSON).download}}
      run: |
        # Validate that the tag being released matches the package version.
        if [[ ! $TAG_NAME == release-$PACKAGE_VERSION ]]; then
          echo "The module.json version does not match tag name."
          echo "module.json: $PACKAGE_VERSION"
          echo "tag name: $TAG_NAME"
          echo "Please fix this and push the tag again."
          exit 1
        fi

        # Validate that the package download url matches the release asset that will be created.
        if [[ ! $RELEASE_DOWNLOAD == $PACKAGE_DOWNLOAD ]]; then
          echo "The module.json download url does not match the created release asset url."
          echo "module.json: $PACKAGE_DOWNLOAD"
          echo "release asset url: $RELEASE_DOWNLOAD"
          echo "Please fix this and push the tag again."
          exit 1
        fi

    - name: Build
      run: |
        cp --force LICENSE.txt module/.
        cp --force README.md module/.

    - run: cd module && zip ../${{steps.get_vars.outputs.ZIP_NAME}} -r six-feet-under.mjs LICENSE.txt README.md module.json

    # Create a release for this specific version
    - name: Update Release with Files
      id: create_version_release
      uses: ncipollo/release-action@v1
      with:
        allowUpdates: true # Set this to false if you want to prevent updating existing releases
        name: ${{steps.get_vars.outputs.TAG_NAME}}
        draft: false
        prerelease: false
        token: ${{ secrets.GITHUB_TOKEN }}
        artifacts: './module/module.json, ./${{steps.get_vars.outputs.ZIP_NAME}}'
        tag: ${{steps.get_vars.outputs.TAG_NAME}}
        body: '**Installation:** To manually install this release, please use the following manifest URL: ${{steps.get_vars.outputs.RELEASE_INSTALL_URL}}'
